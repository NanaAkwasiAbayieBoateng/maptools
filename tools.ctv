<CRANTaskView>

<name>MappingTools</name>
<topic>Mapping tools and services</topic>
<maintainer email="hollister.jeff@epa.gov">Jeff Hollister, Scott Chamberlain, Karthik Ram, Hadley Wickham, Ben Marwick, Cory Nissen</maintainer>
<version>2015-02-27</version>

<info> This task view contains information about mapping and visualizing spatial data in R.  The base version of R does not ship with many tools for mapping spatial data. Thankfully, there are an increasingly large number of tools, both in R and those utilizing javascript libraries, for doing so. A list of available packages and functions is presented below, grouped by the type of activity.

If you have any comments or suggestions for additions or improvements for this taskview, go to Github and <a href="https://github.com/ropensci/maptools/issues">submit an issue</a>, or <a href="https://github.com/ropensci/maptools/CONTRIBUTING.md">make some changes</a> and <a href="https://github.com/ropensci/maptools/pulls">submit a pull request</a>. If you can't contribute on Github, <a href="mailto:hollister.jeff@epa.gov">send Jeff an email</a>. If you have an issue with one of the packages discussed below, please contact the maintainer of that package.

This task view is focused on mapping spatial data.  For more on working with and analyzing spatial data in R, see the <view>Spatial Task View</view>.

<h2>
Mapping tools in R
</h2>

<p><strong>Visualization</strong></p>
<ul>
<li>
<a href="https://github.com/Vizzuality/cartodb-r">cartodb</a>: CartoDB R client. Not on CRAN, and hasn't been active for a while. <a href="https://github.com/Vizzuality/cartodb-r">Source on Github</a>
</li>
<li>
<a href="https://github.com/lmullen/cartographer">cartographer</a>: Interactive maps in R using <a href="https://github.com/emeeks/d3-carto-map">d3-carto-map</a>. <a href="https://github.com/lmullen/cartographer">Source on Github</a>
</li>
<li>
<pkg>ggmap</pkg>: Visualization of spatial data and models on top of Google Maps, OpenStreetMaps, Stamen Maps, or CloudMade Maps using ggplot2. <a href="https://github.com/dkahle/ggmap">Source on Github</a>
</li>
<li>
<pkg>leafletR</pkg>: Client for the JavaScript library Leaflet.js. Basic mapping functionality to combine vector data and online map tiles from different sources. <a href="https://github.com/chgrl/leafletR">Source on Github</a>
</li>
<li>
<pkg>micromap</pkg>: This group of functions simplifies the creation of linked micromap plots, and uses ggplot2 plotting framework. <a href="https://github.com/USEPA/R-micromap-package-development">Source on Github.</a>
</li>
<li>
<pkg>OpenStreetMap</pkg>: An R client for the Open Stree Maps API. <a href="https://github.com/">Source on Github</a>
</li>
<li>
<pkg>plotGoogleMaps</pkg>: This package provides a interactive plot device for handling the geographic data for web browsers. It is designed for the automatic creation of web maps as a combination of users' data and Google Maps layers.
</li>
<li>
<a href="https://github.com/jhollist/quickmapr">quickmpar</a>: Quick visualization of <pkg>sp</pkg> and <pkg>raster</pkg> objects.  Provides basic interactivity including zooming and panning as well as identifying features.  <a href="https://github.com/jhollist/quickmapr">Source on Github</a>
</li>
<li>
<pkg>rasterVis</pkg>: Package for enchanced visualization of raster data. <a href="https://github.com/oscarperpinan/rastervis/">Source on Github</a>
</li>
<li>
<pkg>Rgooglemaps</pkg>: Query Google static maps, and use the map as a background image to overlay plots within R. <a href="https://github.com/markusloecher/RgoogleMaps">Source on Github</a>
</li>
<li>
<a href="https://github.com/ramnathv/rMaps">rMaps</a>: A general purpose wrapper around man Javascript mapping libraries, including <a href="http://leafletjs.com/">Leaflet</a>, <a href="http://datamaps.github.io/">Datamaps</a>, and <a href="http://sztanko.github.io/crosslet/">Crosslet</a>. <a href="https://github.com/ramnathv/rMaps">Source on Github</a>
</li>
<li>
<pkg>sp</pkg>: Core package in R for doing spatial data manipulation and analysis. Plotting capabilities in <pkg>sp</pkg> are provdied through some default plot methods.  More advanced plotting based on <pkg>lattice</pkg>. <a href="https://r-forge.r-project.org/projects/rspatial/">Source on R-Forge</a>
</li>
</ul>

<p><strong>Projecting Data</strong></p>
<p>Coordinates for spatial data can come in many different flavors with different units, datums, projections, and more.  Many of the tools will visualize your data regardless of the native coordinate reference system; however, most (all?) of the javascript libraries assume some flavor of lattitude-longitude, thus if your data are projected they need to be transformed back to geographic coordinates prior to mapping.  For most mapping and visulaization efforts unprojected data (often displayed in Web Mercator/EPSG::3857) is fine; however, if accuarate area, length, or distance measurements are required through interacting with the map, then projections need to be considered.  A discussion of projections and coordinate systems is beyond the scope of this task view.  To learn more a good starting place is [NCEAS' Overview of Coordinate Reference Systems in R](https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/OverviewCoordinateReferenceSystems.pdf)</p>

<p>Once you know that you need to transform you data there are several options:</p>
<ul>
<li>
<pkg>sp</pkg>: The function <code>spTransform</code> (and methods in <pkg>rgdal</pkg>) is the workhorse function for spatial transformations of vector data and it uses [PROJ.4](http://trac.osgeo.org/proj/) arguments to specify the transformations.  Accepted inputs are provided by the spTransform methods in <pkg>rgdal</pkg>.   <a href="https://r-forge.r-project.org/projects/rspatial/"> Source for <code>sp</code> on R-Forge</a>. <a href="https://r-forge.r-project.org/projects/rgdal/"> Source for <code>rgdal</code> on R-Forge</a>. 
</li>
<pkg>raster</pkg>: Use <code>rasterProject()</code> to project rasters. Projecting rasters is a bit different than vector as the transformation results in a rotated grid which require some interpolation to map the original cell values to the new cell values. Dealing with this requires a separate funciton and <code>rasterProject()</code> has options for dealing with the interpolation.
<li>
<pkg>mapproj</pkg>: This package provides a fucntion to convert two vectors representing longitude (x) and  lattitude (y) to projected coordinates.  
</li>
<li>
<pkg>PBSmapping</pkg>: The function <code>convUL</code> will transform coordinates between Universal Transverse Mercator (UTM) and longitude-latitude. A data frame with a <code>projection</code> attribute is required input. <a href="http://code.google.com/p/pbs-software/">Source on Google Code</a>
</li>
</ul>

<p><strong>Geocoding</strong></p>
<ul>
<li>
<pkg>geocodeHERE</pkg>: Client for Nokia's <a href="https://developer.here.com/geocoder">HERE geocoding API</a>. <a href="https://github.com/corynissen/geocodeHERE/">Source on GitHub</a>
</li>
<li>
<pkg>ggmap</pkg>: The function <code>geocode</code> in <pkg>ggmap</pkg> uses the <a href="https://developers.google.com/maps/documentation/geocoding/?csw=1">Google Geocoding API</a>. <a href="https://github.com/">Source on Github</a>
</li>
<li>
<a href="https://github.com/trestletech/rydn">rydn</a>: Client for the Yahoo! Developers Network <a href="https://developer.yahoo.com/boss/">BOSS PlaceFinder API</a>. <a href="https://github.com/trestletech/rydn">Source on Github</a>
</li>
</ul>

<p><strong>Sources of Map Data</strong></p>
<ul>
<li>
<pkg>maps</pkg>
</li>
<li>
<pkg>rworldmap</pkg>
</li>
<li>
<pkg>osmar</pkg>
</li>
<li>
<pkg>UScensus2010</pkg>
</li>
<li>
<pkg>geomapdata</pkg>
</li>
<li>
<pkg>geonames</pkg>: functions for working with <a href="http://www.geonames.org/">geonames</a>, a geographical database that covers all countries and contains over eight million placenames
</li>
<li>
<pkg>USAboundaries</pkg>: provides spatial objects with the boundaries of states or counties in the United States of America from 1629 to 2000. It provides data from the Atlas of Historical County Boundaries.
</li>
</ul>

<p><strong>Map Data I/O</strong></p>
<ul>
<li>
shapefiles: <pkg>maptools</pkg>, <pkg>rgdal</pkg>
</li>
<li>
topo- and geo- json: <pkg>rgdal</pkg>, geojsonio
</li>
<li>
kml
</li>
<li>
raster: <pkg>raster</pkg>
</li>
</ul>


</info>

<packagelist>
  <pkg priority="core">sp</pkg>
{{#pkgs}}
  <pkg>{{package}}</pkg>
{{/pkgs}}
</packagelist>

<links>
	<a href="https://github.com/ramnathv/rMaps">GitHub package: rMaps</a>
	<a href="https://github.com/Vizzuality/cartodb-r">GitHub package: cartodb</a>
  <a href="https://github.com/trestletech/rydn">GitHub package: rydn</a>
</links>

</CRANTaskView>
